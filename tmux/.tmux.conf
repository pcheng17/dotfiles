# Fix terminal colors in tmux session
# set -g default-terminal "screen-256color"
set-option -sa terminal-overrides ",xterm*:Tc"

unbind C-b
set -g prefix C-space
bind C-space send-prefix

# Set Esc delay to 0
set -s escape-time 0

# Increase scrollback buffer size
set -g history-limit 50000

# Increase tmux messages display duration
set -g display-time 4000

# Refresh 'stat-left' and 'status-right' every 5 seconds
set -g status-interval 5

# Enable mouse scroll
set -g mouse on

# Focus events enabled for terminals that support them
set -g focus-events on

# Super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# Automatically renumber windows
set -g renumber-windows on

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# Enable copy-mode to the clipboard
set -s copy-command 'xsel -i'
# Keep selections shown after select
bind -T copy-mode MouseDragEnd1Pane send -X copy-selection-no-clear 'pbcopy'
# Since MouseDragEnd1Pane neither exit copy-mode nor clear selection now,
# let single click do selection clearing for us.
bind-key -T copy-mode MouseDown1Pane select-pane\; send-keys -X clear-selection

# Make `<prefix> + r` reload the config file
unbind r
bind r source-file ~/.tmux.conf \; display "Config reloaded"

# Set some colors for the status bar
set -g @rosewater "#f5e0dc"
set -g @pink "#f5c2e7"
set -g @peach "#fab387"
set -g @blue "#89b4fa"
set -g @yellow "#f9e2af"
set -g @green "#a6e3a1"
set -g @teal "#94e2d5"
set -g @surface0 "#313244"
set -g @surface1 "#45475a"
set -g @base "#1e1e2e"

# Format status bar
# set -g status-justify centre
set -g status-style "bg=default fg=#{@blue}"
# set -g status-left "  #S #[fg=#{@surface1},bg=default]| "
set -g status-right "#[fg=#{@blue}]  %a, %b %d #[fg=#{@surface1}]|#[fg=#{@blue}]  %-I:%M %p "
set -g window-status-current-style "fg=#{@yellow}"
set -g message-style "bg=default fg=#{@teal}"
set -g message-command-style "bg=default fg=#{@teal}"
set -g mode-style "bg=#{@surface1} fg=#{@teal}"
set -g status-right-length 100
set -g status-left-length 100

# Example of how to add an indicator for when the prefix is active - do I want to use this?
set -g status-left "  #{?client_prefix,,#S}#[fg=#{@green}]#{?client_prefix,#S,}#[fg=#{@blue}] #[fg=#{@surface1},bg=default]| "

# Shift arrow to switch windows (no prefix needed)
bind -n S-Left previous-window
bind -n S-Right next-window

# Alt (Option) Shift vim keys to switch windows (no prefix needed)
# I don't like these as much, but keeping them around just in case
# bind -n M-H previous-window
# bind -n M-L next-window

# Split window bindings
unbind %
bind | split-window -h # vertical split
unbind '"'
bind _ split-window -v # horizontal split
bind -r ^ last-window
bind -r j resize-pane -D 5
bind -r k resize-pane -U 5
bind -r l resize-pane -R 5
bind -r h resize-pane -L 5

bind -r f run-shell "tmux neww $HOME/bin/tmux-sessionizer"

unbind t
bind -r t run-shell "tmux splitw $HOME/bin/tmux-timewarrior"

# vim-tmux-navigator, not using tpm because I want to use alt instead of ctrl
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h'  'select-pane -L'
bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j'  'select-pane -D'
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k'  'select-pane -U'
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'M-\\' if-shell \"$is_vim\" 'send-keys M-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'M-\\' if-shell \"$is_vim\" 'send-keys M-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'M-h' select-pane -L
bind-key -T copy-mode-vi 'M-j' select-pane -D
bind-key -T copy-mode-vi 'M-k' select-pane -U
bind-key -T copy-mode-vi 'M-l' select-pane -R

# Use Shift-up and Shift-down to enter start selection mode, and then arrow keys to select test.
bind -n S-Up   copy-mode \; send-keys -X begin-selection \; send-keys -X cursor-up
bind -n S-Down copy-mode \; send-keys -X begin-selection \; send-keys -X cursor-down

# Make Enter copy to macOS clipboard when selecting with the keyboard
unbind -T copy-mode-vi Enter
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"

unbind -T copy-mode Enter
bind -T copy-mode Enter send-keys -X copy-pipe-and-cancel "pbcopy"
